name: Petclinic CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Generate docker images
      run : mvn spring-boot:build-image --file pom.xml -X -Pk8s -DREPOSITORY_PREFIX=elfiadylclc
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME_EL }}
        password: ${{ secrets.DOCKER_PASSWORD_EL }}
    - name: push docker images
      run : ./scripts/pushImages.sh

  clean:
    needs: build
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_2 }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_2 }}
        aws-region: eu-west-3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Update kube config
      run: |
        pwd & ls
        cat ./k8s/*.yaml | sed 's#\${REPOSITORY_PREFIX_EL}'"#${REPOSITORY_PREFIX_EL}#g" | > deploy.yaml

    - name: clean namespace 1/5
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          delete --all pods --ignore-not-found=true --namespace=spring-petclinic

    - name: clean namespace 2/5
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          delete deploy customers-service --ignore-not-found=true -n spring-petclinic

    - name: clean namespace 3/5
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          delete deploy vets-service --ignore-not-found=true -n spring-petclinic

    - name: clean namespace 4/5
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          delete deploy visits-service --ignore-not-found=true -n spring-petclinic

    - name: clean namespace 5/5
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          delete deploy wavefront-proxy --ignore-not-found=true -n spring-petclinic

    - name: Deletion des secrets Amazon EKS
      uses: kodermax/kubectl-aws-eks@main
      env:
         KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          delete secret generic wavefront --ignore-not-found=true -n spring-petclinic 
      
  init_namesapce:
    needs: clean
    runs-on: ubuntu-latest
    steps:
     
    - uses: actions/checkout@v2 
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_2 }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_2 }}
        aws-region: eu-west-3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Update kube config
      run: |
        pwd & ls
        cat ./k8s/*.yaml | sed 's#\${REPOSITORY_PREFIX_EL}'"#${REPOSITORY_PREFIX_EL}#g" | > deploy.yaml
        
    - name: Initialization of namespace EKS
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          apply -f k8s/init-namespace/

  deploy:
    needs: init_namesapce
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2 
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_2 }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_2 }}
        aws-region: eu-west-3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Update kube config
      run: |
        pwd & ls
        cat ./k8s/*.yaml | sed 's#\${REPOSITORY_PREFIX_EL}'"#${REPOSITORY_PREFIX_EL}#g" | > deploy.yaml

    - name: Creation des secrets Amazon EKS
      uses: kodermax/kubectl-aws-eks@main
      env:
         KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          create secret generic wavefront -n spring-petclinic --from-literal=wavefront-url=https://wavefront.surf --from-literal=wavefront-api-token=7380ef8d-a2ce-40a7-85b8-70d9d3fab32d

    - name: Initialization of deployment Amazon EKS
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          apply -f k8s/
          
    - name: add conf kub
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          config view --raw >~/.kube/config
                  
    - name: Initialization of services Amazon EKS 
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          apply -f k8s/init-services

    - name: Settings up databases with helm install repo 1/5
      uses: WyriHaximus/github-action-helm3@v3
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
          args: |
            repo add bitnami https://charts.bitnami.com/bitnami 

    - name: Settings up databases with helm install repo 2/5
      uses: WyriHaximus/github-action-helm3@v3
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
          args: |
            repo update 

    - name: Settings up databases with helm install repo 3/5
      uses: WyriHaximus/github-action-helm3@v3
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
          args: |
            upgrade --install  vets-db-mysql bitnami/mysql --namespace spring-petclinic  --set primary.persistence.enabled=false --set secondary.persistence.enabled=false --set auth.database=service_instance_db

    - name: Settings up databases with helm install repo 4/5
      uses: WyriHaximus/github-action-helm3@v3
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
          args: |
            upgrade --install  visits-db-mysql bitnami/mysql --namespace spring-petclinic  --set primary.persistence.enabled=false --set secondary.persistence.enabled=false --set auth.database=service_instance_db

    - name: Settings up databases with helm install repo 5/5
      uses: WyriHaximus/github-action-helm3@v3
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
          args: |
            upgrade --install  customers-db-mysql bitnami/mysql --namespace spring-petclinic  --set primary.persistence.enabled=false --set secondary.persistence.enabled=false --set auth.database=service_instance_db
   
          
  test:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2 
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_2 }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_2 }}
        aws-region: eu-west-3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Update kube config
      run: |
        pwd & ls
        cat ./k8s/*.yaml | sed 's#\${REPOSITORY_PREFIX_EL}'"#${REPOSITORY_PREFIX_EL}#g" | > deploy.yaml

    - name: get api 
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          get svc -n spring-petclinic api-gateway 
  
